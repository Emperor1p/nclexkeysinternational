name: Deploy to Vercel

on:
  push:
    branches: [ main, production-ready ]
  pull_request:
    branches: [ main ]

jobs:
  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production-ready'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build frontend
      run: |
        cd frontend
        npm run build
        
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
        vercel-args: '--prod'
        
  deploy-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/production-ready'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        cd backend
        python manage.py check
        
    - name: Check EC2 deployment prerequisites
      run: |
        if [ -z "$EC2_HOST" ]; then
          echo "⚠️  EC2_HOST secret not configured. Backend deployment will be skipped."
          echo "💡 To enable backend deployment, add EC2_HOST and EC2_SSH_KEY secrets to GitHub."
        else
          echo "✅ EC2_HOST secret found. Backend deployment will proceed."
        fi
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
        
    - name: Deploy to EC2
      if: env.EC2_HOST != ''
      uses: appleboy/ssh-action@v1.0.0
      env:
        EC2_HOST: ${{ secrets.EC2_HOST }}
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "🚀 Starting backend deployment..."
          cd /home/ubuntu/nclexkey/backend
          echo "📥 Pulling latest code..."
          git pull origin main
          echo "📦 Activating virtual environment..."
          source venv/bin/activate
          echo "📥 Installing dependencies..."
          pip install -r requirements.txt
          echo "📋 Running migrations..."
          python manage.py migrate
          echo "📁 Collecting static files..."
          python manage.py collectstatic --noinput
          echo "🔄 Restarting services..."
          sudo systemctl restart gunicorn
          sudo systemctl restart nginx
          echo "✅ Backend deployment completed successfully!"
